image: registry.git.fh-aachen.de/ba-vd/sfm-pipeline/rcsop-gitlab-ci:generic

stages:
  - build
  - test

Compile - GCC 12:
  stage: build
  script:
    - export CC=/usr/bin/gcc
    - export CXX=/usr/bin/g++
    - mkdir build
    - cd build && cmake .. -DCMAKE_BUILD_TYPE=Release
    - make -j 8
  cache:
    key: "$CI_PIPELINE_ID-build"
    policy: push
    paths:
      - build/

Compile - Clang 14:
  stage: build
  allow_failure: true
  script:
    - export CC=/usr/bin/clang
    - export CXX=/usr/bin/clang++
    - mkdir build
    - cd build && cmake .. -DCMAKE_BUILD_TYPE=Release
    - make -j 8

Fetch sample input data:
  stage: build
  script:
    - curl -L -S -o inputs.tar.xz 'https://dobrovolskis.com/public/sfm/rcsop-input-ci.tar.xz'
    - tar -xf inputs.tar.xz
    - rm inputs.tar.xz
  cache:
    key: "$CI_PIPELINE_ID-input"
    policy: push
    paths:
      - input/

Task aRCS (jet 0.3)":
  stage: test
  script:
    - mkdir output
    - ./build/launcher/rcs-overlay-plotter --pitch-correction -2.0 --default-height 40 --color-map jet --alpha 0.3 -T "azimuth-rcs" --software-rendering -I input -O output
  cache:
    - key: "$CI_PIPELINE_ID-build"
      paths:
        - build/
      policy: pull
    - key: "$CI_PIPELINE_ID-input"
      paths:
        - input/
      policy: pull
  artifacts:
    paths:
      - output
    expire_in: never

Task aRCS (red 0.6)":
  stage: test
  script:
    - mkdir output
    - ./build/launcher/rcs-overlay-plotter --pitch-correction -2.0 --default-height 40 --color-map jet --alpha 0.6 -T "azimuth-rcs" --software-rendering -I input -O output
  cache:
    - key: "$CI_PIPELINE_ID-build"
      paths:
        - build/
      policy: pull
    - key: "$CI_PIPELINE_ID-input"
      paths:
        - input/
      policy: pull
  artifacts:
    paths:
      - output
    expire_in: never

Task "RCS slices":
  stage: test
  script:
    - mkdir output
    - ./build/launcher/rcs-overlay-plotter -T "rcs-slices" --software-rendering -I input -O output --default-height 40
  cache:
    - key: "$CI_PIPELINE_ID-build"
      paths:
        - build/
      policy: pull
    - key: "$CI_PIPELINE_ID-input"
      paths:
        - input/
      policy: pull
  artifacts:
    paths:
      - output
    expire_in: never

Dummy task:
  stage: test
  script:
    - mkdir output
    - ./build/launcher/rcs-overlay-plotter -T "test-task" -I input -O output
  cache:
    - key: "$CI_PIPELINE_ID-build"
      paths:
        - build/
      policy: pull
    - key: "$CI_PIPELINE_ID-input"
      paths:
        - input/
      policy: pull
  artifacts:
    paths:
      - output
    expire_in: never
